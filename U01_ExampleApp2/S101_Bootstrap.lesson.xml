<?xml version='1.0' encoding='UTF-8'?>
<slide xmlns="https://ulearn.me/schema/v2" title="Часть 6. Bootstrap" id="5d9ce5aa-ab10-4a65-bd17-064d8ea611ae">
    <markdown>
Для стилизации элементов html страницы и задания внешнего вида web приложения используется [CSS](https://en.wikipedia.org/wiki/Cascading_Style_Sheets), а довольно часто используются и целые [CSS frameworks](https://en.wikipedia.org/wiki/CSS_framework). Мы в нашем учебном проекте возьмём один из таких CSS фреймворков - [Bootstrap](https://getbootstrap.com/) v4.3.1.

**6.1.** Подключение Bootstrap как внешний ресурс

Добавьте в list.html в тег head следующий тег:

<code language="html">
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot;&gt;
</code>

Теперь, после добавления этого тега, при загрузке страницы браузер будет загружать и использовать ещё этот внешний ресурс.

Убедиться в этом можно например в Developer tools (`Ctrl+Shift+I`) браузера Chrome на вкладке Network. До подключения **bootstrap.min.css** картина такая:

![alt_text](images/css-before.png)

А после подключения такая:

![alt_text](images/css-after.png)

Для полной перезагрузки страницы, с перезагрузкой всего закешированного, в хроме можно использовать `Ctrl+Shift+R`.


**6.2.** Вёрстка с использованием классов Bootstrap

Измените в `list.html` тег `body` чтобы его содержимое стало таким:

<code language="html">
&lt;div class=&quot;container&quot;&gt;
   &lt;h1 th:text=&quot;${appName}&quot; style=&quot;color: green&quot;&gt;Default app name&lt;/h1&gt;
   &lt;hr/&gt;
   &lt;div class=&quot;content&quot;&gt;
       &lt;div class=&quot;row article&quot; th:each=&quot;post : ${posts}&quot;&gt;
           &lt;div class=&quot;col-md-10 col-md-offset-1&quot;&gt;
               &lt;h3 th:text=&quot;${&apos;Пост от &apos; + post.creationDate}&quot;&gt;Пост от 2019.09.08&lt;/h3&gt;
           &lt;/div&gt;
           &lt;div class=&quot;col-md-11 description&quot;&gt;
               &lt;p class=&quot;description-text&quot; th:text=&quot;${post.text}&quot;&gt;Text&lt;/p&gt;
           &lt;/div&gt;
           &lt;div class=&quot;col-md-1&quot;&gt;
               &lt;button class=&quot;btn btn-sm btn-secondary like&quot; th:text=&quot;${post.likes + &apos; ❤&apos;}&quot;&gt;0 ❤&lt;/button&gt;
           &lt;/div&gt;
           &lt;div class=&quot;col-md-12&quot;&gt;
               &lt;hr/&gt;
           &lt;/div&gt;
       &lt;/div&gt;
   &lt;/div&gt;
&lt;/div&gt;
</code>

Поправьте код проекта так чтобы у класса `Post` было поле `private Date creationDate;`, его getter и инициализация этого поля через второй параметр конструктора.

Запустите проект. Убедитесь что всё работает. Сделайте commit с Bootstrap вёрсткой и сделайте push этого коммита на github.

**6.3.** [Responsive](https://en.wikipedia.org/wiki/Responsive_web_design)

В Chrome в DevTools есть возможность включить режим эмуляция отображения как на смартфоне или планшете (`Ctrl+Shift+M`).

![alt_text](images/device.png "image_tooltip")


Сейчас наша страница не адаптирована для мобильных устройств и на них выглядит плохо, элементы слишком мелкие.


<table>
  <tr>
   <td>

<img src="images/resp-before.png" width="" alt="" title="До"/>

   </td>
   <td>

<img src="images/resp-after.png" width="" alt="" title="После"/>

   </td>
  </tr>
</table>


Добавьте соответствующий тег, как это сказано в [документации](https://getbootstrap.com/docs/4.3/getting-started/introduction/#responsive-meta-tag).

Проверьте что теперь в браузере в режиме мобильного устройства, страница выглядит как на скриншоте справа.

Сделайте commit и push на github.

    </markdown>
</slide>
